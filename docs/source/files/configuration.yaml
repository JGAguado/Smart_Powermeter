substitutions:
  device_name: "smart-powermeter"
  friendly_name: "Smart Powermeter"
  project_name: "smart.powermeter"
  project_version: "2.0"
  ap_ssid: "Smart-Powermeter"
  ap_pwd: "smartpowermeter"

esphome:
  name: "${device_name}"
  name_add_mac_suffix: true
  project:
    name: "${project_name}"
    version: "${project_version}"

esp32:
  board: esp32-s2-saola-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Enable Over The Air updates
ota:


#Public location of this yaml file
dashboard_import:
  package_import_url: github://JGAguado/Smart_Powermeter/docs/source/files/configuration.yaml
  import_full_config: false

# Enable fallback hotspot (captive portal) in case wifi connection fails
captive_portal:


improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${ap_ssid}"
    password: "${ap_pwd}"


i2c:
  scl: GPIO34
  sda: GPIO33
  scan: true
  id: bus_a

time:
  - platform: homeassistant
    id: esptime

sensor:
  - platform: homeassistant
    id: daily_cost
    name: "Daily cost"
    entity_id: sensor.total_daily_power_cost

    
  - platform: adc
    pin: GPIO1
    id: Input_1
    attenuation: 11db
    update_interval: 1s
    
  - platform: adc
    pin: GPIO2
    id: Input_2
    attenuation: 11db
    update_interval: 1s
    
  - platform: adc
    pin: GPIO3
    id: Input_3
    attenuation: 11db
    update_interval: 1s
   
  - platform: ct_clamp
    sensor: Input_1
    id: Probe_1
    name: "Probe 1"
    sample_duration: 200ms
    update_interval: 1s
    filters:
      - calibrate_linear:
          - 0 -> 0
          - 0.042 -> 2.72 # Calibrate according to your measurements
   
  - platform: ct_clamp
    sensor: Input_2
    name: "Probe 2"
    id: Probe_2
    sample_duration: 200ms
    update_interval: 1s
    filters:
      - calibrate_linear:
          - 0 -> 0
          - 0.033 -> 1.07 # Calibrate according to your measurements
   
  - platform: ct_clamp
    sensor: Input_3
    name: "Probe 3"
    id: Probe_3
    sample_duration: 200ms
    update_interval: 1s
    filters:
      - calibrate_linear:
          - 0 -> 0
          - 0.022 -> 0.66 # Calibrate according to your measurements
    
  - platform: total_daily_energy
    name: "Total Daily Power"
    power_id: current_power
    id: daily_power

  - platform: template
    id: current_power
    name: "Measured Power"
    lambda: return (id(Probe_1).state + id(Probe_2).state + id(Probe_3).state) * 230.0 / 1000; #Apparent power = Current * Voltage 
    unit_of_measurement: 'kW'
    update_interval: 5s


font:
  - file: "fonts/Audiowide.ttf"
    id: my_font
    size: 20

spi:
  clk_pin: GPIO12
  mosi_pin: GPIO11 


display:
  - platform: waveshare_epaper
    cs_pin: GPIO10
    dc_pin: GPIO13
    busy_pin: GPIO14
    reset_pin: GPIO15
    rotation: 270
    model: 2.90inv2
    id: my_display
    update_interval: 1min
    full_update_every: 1
    pages: 
      - id: page1
        lambda: |-
          it.print(0, 10, id(my_font), "Hello World!");